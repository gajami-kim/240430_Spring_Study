package com.ezen.test.handler;

import java.io.File;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;

import com.ezen.test.domain.FileVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
//사용자가 만드는 class를 spring에게 인지시킬 수 있도록 하는 어노테이션
//new로 객체를 만들어줄 필요없이 spring에서 관리하는 파일과 같이 사용가능하다
@Component
public class FileHandler {

	//실제 파일이 저장되는 경로
	private final String UP_DIR="D:\\_myProject\\_java\\_fileUpload";

	public List<FileVO> uploadFiles(MultipartFile[] files) {
		//리턴 객체 생성
		List<FileVO> flist = new ArrayList<FileVO>();
		
		//MultipartFile[] 받아서 FileVO 형태의 list로 리턴
		//오늘날짜로 경로 생성(가변형태로 저장) 년 월 일 폴더생성
		
		//오늘날짜로 경로 생성
		LocalDate date = LocalDate.now();
		String today = date.toString();
		log.info(today);
		
		//오늘날짜를 폴더형식으로 구성
		today = today.replace("-", File.separator);
		
		//D:\\_myProject\\_java\\_fileUpload\\2024\\04\\29
		File folders = new File(UP_DIR, today);
		//폴더생성 -> mkdir(폴더 1개 생성), mkdirs(하위 폴더까지 구조로 생성)
		//exists : 있는지 없는지 확인(없으면 생성, 있으면 생성x)
		if(!folders.exists()) {
			folders.mkdirs(); //폴더생성(\\를 파일 구분자로 자동인식)
		}
		
		return flist;
	}

}
